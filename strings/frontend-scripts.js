const {w: t} = require('@iondv/i18n');

module.exports = {
  'js.common.mb': t('Mb'),
  'js.common.kb': t('Kb'),
  'js.common.byte': t('byte'),
  'js.common.dt.processing': t('Wait...'),
  'js.common.dt.search': t('Search:'),
  'js.common.dt.lengthMenu': t('Show by _MENU_'),
  'js.common.dt.info': t('Records from _START_ to _END_ of _TOTAL_ records'),
  'js.common.dt.infoEmpty': t('Records from 0 to 0 of 0 records'),
  'js.common.dt.infoFiltered': t('(total _MAX_)'),
  // 'js.common.dt.infoPostFix': t(''),
  'js.common.dt.loadingRecords': t('Loading...'),
  'js.common.dt.zeroRecords': t('No records.'),
  'js.common.dt.emptyTable': t('Table has no data'),
  'js.common.dt.paginate.first': t('<<'),
  'js.common.dt.paginate.previous': t('<'),
  'js.common.dt.paginate.next': t('>'),
  'js.common.dt.paginate.last': t('>>'),
  'js.common.dt.aria.sortAscending': t(': activate for sorting by ascending order'),
  'js.pivot.ajaxFail': t('failed to get data from %url'),
  'js.pivot.agr': t('Quan'),
  'js.pivot.agrname.count': t('Count'),
  'js.pivot.agrname.countUniqueValues': t('Count unique'),
  'js.pivot.agrname.listUniqueValues': t('List unique'),
  'js.pivot.agrname.sum': t('Sum'),
  'js.pivot.agrname.integerSum': t('Sum of integer'),
  'js.pivot.agrname.avg': t('Average'),
  'js.pivot.agrname.min': t('Minimum'),
  'js.pivot.agrname.max': t('Maximum'),
  'js.pivot.agrname.sumOverSum': t('Sum by sum'),
  'js.pivot.agrname.UpperBound': t('80% of roof'),
  'js.pivot.agrname.LowerBound': t('80% of floor'),
  'js.pivot.agrname.sumFractionTotal': t('Total sum'),
  'js.pivot.agrname.sumFractionRows': t('Row sum'),
  'js.pivot.agrname.sumFractionColumns': t('Column sum'),
  'js.pivot.agrname.countFractionTotal': t('Total count'),
  'js.pivot.agrname.countFractionRows': t('Count in row'),
  'js.pivot.agrname.countFractionColumns': t('Count in column'),
  'js.sheet.ajaxFail': t('failed to get data from %url'),
  'js.sheet.filterParams': t('Please specify filter options.'),
  'js.userFilters.select': t('Select filter...')
};
